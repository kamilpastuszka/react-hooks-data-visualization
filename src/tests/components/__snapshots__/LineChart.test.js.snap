// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render LineChart component with data and title props 1`] = `
<div>
  <div
    style={
      Object {
        "display": "flex",
        "justifyContent": "center",
      }
    }
  >
    <h2>
      Average temperature for London
    </h2>
  </div>
  <LineChart
    barCategoryGap="10%"
    barGap={4}
    data={
      Array [
        Object {
          "data": "Jan",
          "temperature": "5",
        },
        Object {
          "data": "Feb",
          "temperature": "7",
        },
        Object {
          "data": "Mar",
          "temperature": "9",
        },
        Object {
          "data": "Apr",
          "temperature": "11",
        },
        Object {
          "data": "May",
          "temperature": "14",
        },
        Object {
          "data": "Jun",
          "temperature": "16",
        },
        Object {
          "data": "Jul",
          "temperature": "19",
        },
        Object {
          "data": "Aug",
          "temperature": "19",
        },
        Object {
          "data": "Sep",
          "temperature": "17",
        },
        Object {
          "data": "Oct",
          "temperature": "13",
        },
        Object {
          "data": "Nov",
          "temperature": "10",
        },
        Object {
          "data": "Dec",
          "temperature": "7",
        },
      ]
    }
    height={450}
    layout="horizontal"
    margin={
      Object {
        "bottom": 5,
        "left": 20,
        "right": 30,
        "top": 30,
      }
    }
    reverseStackOrder={false}
    stackOffset="none"
    width={730}
  >
    <CartesianGrid
      fill="none"
      horizontal={true}
      horizontalFill={Array []}
      horizontalPoints={Array []}
      stroke="#ccc"
      strokeDasharray="3 3"
      vertical={true}
      verticalFill={Array []}
      verticalPoints={Array []}
    />
    <XAxis
      allowDataOverflow={false}
      allowDecimals={true}
      allowDuplicatedCategory={true}
      dataKey="data"
      domain={
        Array [
          0,
          "auto",
        ]
      }
      height={30}
      hide={false}
      mirror={false}
      orientation="bottom"
      padding={
        Object {
          "left": 0,
          "right": 0,
        }
      }
      reversed={false}
      scale="auto"
      tickCount={5}
      type="category"
      width={0}
      xAxisId={0}
    >
      <Legend
        align="center"
        iconSize={14}
        layout="horizontal"
        value="Average temperature for London"
        verticalAlign="bottom"
      />
    </XAxis>
    <YAxis
      allowDataOverflow={false}
      allowDecimals={true}
      allowDuplicatedCategory={true}
      domain={
        Array [
          0,
          "auto",
        ]
      }
      height={0}
      hide={false}
      mirror={false}
      orientation="left"
      padding={
        Object {
          "bottom": 0,
          "top": 0,
        }
      }
      reversed={false}
      scale="auto"
      tickCount={5}
      type="number"
      width={60}
      yAxisId={0}
    />
    <Tooltip
      active={false}
      animationDuration={400}
      animationEasing="ease"
      contentStyle={Object {}}
      coordinate={
        Object {
          "x": 0,
          "y": 0,
        }
      }
      cursor={true}
      cursorStyle={Object {}}
      filterNull={true}
      isAnimationActive={true}
      itemSorter={[Function]}
      itemStyle={Object {}}
      labelStyle={Object {}}
      offset={10}
      separator=" : "
      useTranslate3d={false}
      viewBox={
        Object {
          "x1": 0,
          "x2": 0,
          "y1": 0,
          "y2": 0,
        }
      }
      wrapperStyle={Object {}}
    />
    <Line
      activeDot={true}
      animateNewValues={true}
      animationBegin={0}
      animationDuration={1500}
      animationEasing="ease"
      connectNulls={false}
      dataKey="temperature"
      dot={true}
      fill="#fff"
      hide={false}
      isAnimationActive={true}
      legendType="line"
      onAnimationEnd={[Function]}
      onAnimationStart={[Function]}
      points={Array []}
      stroke="#8884d8"
      strokeWidth={1}
      type="monotone"
      xAxisId={0}
      yAxisId={0}
    />
  </LineChart>
</div>
`;
